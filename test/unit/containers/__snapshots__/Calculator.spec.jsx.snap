// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedCalculator should match enzyme shallow snapshot 1`] = `
<Calculator
  celsius=""
  fahrenheit=""
  onCelsiusChange={[Function]}
  onFahrenheitChange={[Function]}
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Object {
              "temperatures": Object {
                "celsius": "",
                "fahrenheit": "",
              },
            },
          },
          Object {
            "isThrow": false,
            "value": Object {
              "temperatures": Object {
                "celsius": "",
                "fahrenheit": "",
              },
            },
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [MockFunction],
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": Object {
                "temperatures": Object {
                  "celsius": "",
                  "fahrenheit": "",
                },
              },
            },
            Object {
              "isThrow": false,
              "value": Object {
                "temperatures": Object {
                  "celsius": "",
                  "fahrenheit": "",
                },
              },
            },
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
      "unsubscribe": undefined,
    }
  }
/>
`;
